;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;*               PLACA DE APRENDIZAGEM: USTART FOR PIC		   *
;*		 PROGRAMAÇÃO EM ASSEMBLY DO PIC18F4550		   *
;*			AUTOR: MARISMAR COSTA                      *
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
   
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;*                     ARQUIVOS DE DEFINIÇÕES                      *
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *	
    LIST p=18f4550, r=hex  
#INCLUDE <p18f4550.inc>		    ;ARQUIVO PADRÃO MICROCHIP PARA 18F4550
    
; CONFIG1H
    CONFIG  FOSC = INTOSCIO_EC	    ;OSCILADOR INTERNO COM RA6 COMO PORTA DIGITAL DE ENTRADA OU SAÍDA 
    
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;*                         VARIÁVEIS                               *
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
; DEFINIÇÃO DOS NOMES E ENDEREÇOS DE TODAS AS VARIÁVEIS UTILIZADAS 
; PELO SISTEMA

	CBLOCK	0x10		    ;ENDEREÇO INICIAL DA MEMÓRIA DE USUÁRIO
		W_TEMP		    ;REGISTRADORES TEMPORÁRIOS PARA USO
		STATUS_TEMP	    ;JUNTO ÀS INTERRUPÇÕES
		
		;VARIÁVEIS GERAIS
		THETA		    ;ÂNGULO DO PRIMEIRO SERVO MOTOR
		PHI		    ;ÂNGULO DO SEGUNDO SERVO MOTOR
		MELHOR_THETA	    ;MELHOR ÂNGULO THETA(SERVO MOTOR 1)
		MELHOR_PHI	    ;MELHOR ÂNGULO PHI(SERVO MOTOR 2)
		V_MAX_THETA	    ;MÁXIMA TENSÃO EM THETA
		V_MAX_PHI	    ;MÁXIMA TENSÃO EM PHI
		ANGULO_ATIVO	    ;ANGULO EM MOVIMENTACAO: 0 THETA, 1 PHI
		AJUSTE_POSICAO	    ;SINALIZA O ESTADO DO POSICIONAMENTO DOS MOTORES
		VALOR_TENSAO_MINIMO ;ARMAZENA O VALOR MÍNIMO DA CONVERSAO A/D
		
		;VARIÁVEIS AUXILIARES PARA GERAÇÃO DE DELAY
		CONTADOR_DELAY	    ;AUXILIAR NA REPETIÇÃO DO DELAY DE 12 MICROSEGUNDOS
		CONTADOR_AUX	    ;AUXILIAR NA INICIALIZAÇÃO DO ÂNGULO 0(ZERO)
		FIM_PERIODO	    ;SINALIZA QUANDO O PERIODO DE 20 MILISEGUNDOS
		DELAY1		
		DELAY2
		DELAY3

	ENDC			;FIM DO BLOCO DE MEMÓRIA

;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;*                        FLAGS INTERNOS                           *
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
; DEFINIÇÃO DE TODOS OS FLAGS UTILIZADOS PELO SISTEMA
	
	#DEFINE	FIM_PERIODO_FLAG    FIM_PERIODO,0	;FIM_PERIODO = 0 - NÃO ACABOU / 1 - ACABOU
	#DEFINE AJUSTE_THETA_FLAG   AJUSTE_POSICAO,0	;AJUSTE_THETA = 0 - NÃO AJUSTADO / 1 -  AJUSTADO
	#DEFINE AJUSTE_PHI_FLAG	    AJUSTE_POSICAO,1	;AJUSTE_PHI = 0 - NÃO AJUSTADO / 1 - AJUSTADO
	#DEFINE FIM_CICLO_FLAG	    AJUSTE_POSICAO,2	;FIM_CICLO = 0 - EM FASE DE POSICIONAMENTO / 1 - MOTORES POSICIONADOS
	#DEFINE	MODO_INICIALIZACAO  AJUSTE_POSICAO,3	;MODO = 0 - INICIALIZACAO / 1 - EM FUNCIONAMENTO
	#DEFINE	ANGULO_ATIVO_FLAG   ANGULO_ATIVO,0	;ANGULO_ATIVO = 0 - THETA(MOTOR1) / 1 - PHI(MOTOR2)
	
	
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;*                         CONSTANTES                              *
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
; DEFINIÇÃO DE TODAS AS CONSTANTES UTILIZADAS PELO SISTEMA
	
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;*                           ENTRADAS                              *
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
; DEFINIÇÃO DE TODOS OS PINOS QUE SERÃO UTILIZADOS COMO ENTRADA
; RECOMENDAMOS TAMBÉM COMENTAR O SIGNIFICADO DE SEUS ESTADOS (0 E 1)

;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;*                           SAÍDAS                                *
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
; DEFINIÇÃO DE TODOS OS PINOS QUE SERÃO UTILIZADOS COMO SAÍDA
; RECOMENDAMOS TAMBÉM COMENTAR O SIGNIFICADO DE SEUS ESTADOS (0 E 1)	
	
	#DEFINE THETA_FLAG  LATB,1	;PULSO DE DEFINIÇÃO DA INCLINAÇÃO DO SERVO MOTOR1 
	#DEFINE PHI_FLAG    LATB,2	;PULSO DE DEFINIÇÃO DA INCLINAÇÃO DO SERVO MOTOR2
	
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;*			      VETORES                              *
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

	ORG 0x0000	    ;ENDEREÇO INICIAL DO PROGRAMA
	GOTO INICIO
	
	ORG 0x0008	    ;ENDEREÇO DA INTERRUPÇÃO DE ALTA PRIORIDADE
	GOTO HIGH_INT
    
	ORG 0x0018	    ;ENDEREÇO DA INTERRUPÇÃO DE BAIXA PRIORIDADE
	GOTO LOW_INT
    
    
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;*            INÍCIO DA INTERRUPÇÃO DE ALTA PRIORIDADE             *
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
; ENDEREÇO DE DESVIO DAS INTERRUPÇÕES. A PRIMEIRA TAREFA É SALVAR OS
; VALORES DE "W" E "STATUS" PARA RECUPERAÇÃO FUTURA

HIGH_INT:
	MOVWF	W_TEMP		    ;COPIA W PARA W_TEMP
	SWAPF	STATUS,W
	MOVWF	STATUS_TEMP	    ;COPIA STATUS PARA STATUS_TEMP

;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;*            ROTINA DE INTERRUPÇÃO DE ALTA PRIORIDADE             *
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
; AQUI SERÃO ESCRITAS AS ROTINAS DE RECONHECIMENTO E TRATAMENTO DAS
; INTERRUPÇÕES
	
	BTFSS	AJUSTE_THETA_FLAG   ;TESTA SE O POSICIONAMENTO DE THETA FOI FEITO
 	GOTO	TESTA_THETA_ZERO    ;SE NÃO POSICIONADO, TESTA SE THETA == 0
	BSF	ANGULO_ATIVO_FLAG   ;MUDA O ANGULO ATIVO PARA PHI
	BTFSC	AJUSTE_PHI_FLAG	    ;COM THETA AJUSTADO, TESTA SE O POSICIONAMENTO DE PHI TAMBÉM FOI REALIZADO
	GOTO	TESTA_POSICIONAMENTO;SE AMBOS OS ÂNGULOS ESTIVEREM AJUSTADOS, SINALIZA O FIM DO POSICIONAMENTO
	GOTO	TESTA_PHI_ZERO	    ;SE PHI NÃO AJUSTADO, TESTA SE ESTE É IGUAL A ZERO

TESTA_PHI_ZERO
	CLRF	WREG		    ;SE FOR O ÂNGULO IGUAL A ZERO, ESPERA UM DELAY DE 400 MILISEGUNDOS
	SUBWF	PHI,0		    ;VERIFICA SE O ANGULO É ZERO	
    	BTFSC	STATUS,Z	    
	GOTO	PHI_ZERO	    ;SE FOR ZERO, DESVIA PARA O DELAY ADICIONAL
	
TESTA_THETA_ZERO
 	CLRF	WREG		    ;SE FOR O ÂNGULO IGUAL A ZERO, ESPERA UM DELAY DE 400 MILISEGUNDOS
 	SUBWF	THETA,0		    ;VERIFICA SE O ANGULO É ZERO	
     	BTFSC	STATUS,Z	    
	GOTO	THETA_ZERO	    ;SE FOR ZERO, DESVIA PARA O DELAY ADICIONAL
	
INICIA_CONVERSAO		    ;INICIA A CONVERSÃO
 	BSF	ADCON0,1	    ;DISPARA A CONVERSAO A/D
FIM_CONVERSAO			    ;ESPERA A CONVERSAO SER FINALIZADA
	BTFSC	ADCON0,1	    ;VERIFICA O FIM DA CONVERSAO
 	GOTO	FIM_CONVERSAO	
		
 	BTFSC	ANGULO_ATIVO_FLAG   ;VERIFICA QUAL O ANGULO ATIVO
	GOTO	CONVERSAO_PHI	    ;ANALISE A CONVERSÃO REFERENTE AO ÂNGULO PHI
	
	;***************	INICIO ANALISE DA CONVERSAO (THETA)	             ***************
 	MOVF	ADRESH,0	    ;MOVE O VALOR DA CONVERSAO PARA WREG
	CPFSGT	VALOR_TENSAO_MINIMO ;ADRESH < VALOR MINIMO, SKIP
	GOTO	ANALISE_THETA1	    ;ANALISA O VALOR DA CONVERSAO
	GOTO	ANGULO_THETA	    ;INCREMENTA O ÂNGULO THETA
	
ANALISE_THETA1
	MOVF	ADRESH,0	    ;MOVE O VALOR DA CONVERSAO PARA WREG
	CPFSLT	V_MAX_THETA	    ;SE ADRESH > V_MAX_THETA, ATUALIZA O VALOR MÁXIMO E O MELHOR ÂNGULO    
	GOTO	ANALISE_THETA2	    ;SE NÃO, DESVIA PARA A SEGUNDA ANALISE DA CONVERSAO
	MOVWF	V_MAX_THETA	    ;ATUALIZA O MAIOR VALOR DE TENSÃO
	MOVFF	THETA,MELHOR_THETA  ;ATUALIZA O MELHOR ÂNGULO
	GOTO	ANGULO_THETA	    ;INCREMENTA O ÂNGULO THETA
	
ANALISE_THETA2
	MOVF	ADRESH,0	    ;MOVE O VALOR DA CONVERSAO PARA WREG
	CPFSEQ	V_MAX_THETA	    ;SE ADRESH == V_MAX_THETA, SKIP E ATUALIZA O MELHOR ÂNGULO
	GOTO	RETORNA_MAX_THETA   ;SE O VALOR DA CONVERSAO DIMINUIU, ENTÃO RETORNA AO MELHOR ÂNGULO
	MOVWF	V_MAX_THETA	    ;ATUALIZA O MAIOR VALOR DE TENSÃO
	MOVFF	THETA,MELHOR_THETA  ;ATUALIZA O MELHOR ÂNGULO
	GOTO	ANGULO_THETA	    ;INCREMENTA O ÂNGULO THETA
	
RETORNA_MAX_THETA
	MOVFF	MELHOR_THETA,THETA	;MOTOR1 RETORNA AO MELHOR ÂNGULO
	BSF	AJUSTE_THETA_FLAG	;SINALIZA O FINAL DO AJUSTE DE THETA
	MOVFF	V_MAX_THETA,V_MAX_PHI	;TENSÃO MÁXIMA INICIAL EM PHI É A ENCONTRADA NO POSICIONAMENTO DE THETA
	GOTO	END_INT			;DESVIA PARA O FINAL DA INTERRUPÇÃO
	
	;***************	  FIM ANALISE DA CONVERSAO (THETA)	           ***************
	
	;***************	INICIO ANALISE DA CONVERSAO (PHI)                    ***************	
CONVERSAO_PHI
	MOVF	ADRESH,0	    ;MOVE O VALOR DA CONVERSAO PARA WREG
	CPFSLT	V_MAX_PHI	    ;SE ADRESH > V_MAX_PHI, SKIP E ATUALIZA O VALOR MÁXIMO E O MELHOR ÂNGULO    
	GOTO	ANALISE_PHI1	    ;SE NÃO, DESVIA PARA A SEGUNDA ANALISE DA CONVERSAO
	MOVWF	V_MAX_PHI	    ;ATUALIZA O MAIOR VALOR DE TENSÃO
	MOVFF	PHI,MELHOR_PHI	    ;ATUALIZA O MELHOR ANGULO
	GOTO	ANGULO_PHI	    ;INCREMENTA O ÂNGULO PHI
	
ANALISE_PHI1
	MOVF	ADRESH,0	    ;MOVE O VALOR DA CONVERSAO PARA WREG
	CPFSEQ	V_MAX_PHI	    ;SE ADRESH == V_MAX_PHI, SKIP E ATUALIZA O MELHOR ÂNGULO
	GOTO	RETORNA_MAX_PHI	    ;SE O VALOR DA CONVERSAO DIMINUIU, ENTÃO RETORNA AO MELHOR ÂNGULO
	MOVWF	V_MAX_PHI	    ;ATUALIZA O MAIOR VALOR DE TENSÃO
	MOVFF	PHI,MELHOR_PHI	    ;ATUALIZA O MELHOR ÂNGULO
	GOTO	ANGULO_PHI	    ;INCREMENTA O ÂNGULO PHI
	
RETORNA_MAX_PHI
	MOVFF	MELHOR_PHI,PHI	    ;MOTOR2 RETORNA AO MELHOR ANGULO
	BSF	AJUSTE_PHI_FLAG	    ;SINALIZA O FINAL DO AJUSTE DE PHI
	GOTO	END_INT		    ;DESVIA PARA O FINAL DA INTERRUPÇÃO
	
	;***************	  FIM ANALISE DA CONVERSAO (PHI)   	           ***************
	
	
ANGULO_THETA
	INCF	THETA		    ;INCREMENTA O ÂNGULO THETA
	MOVF	THETA,0		    ;COPIA O VALOR DE THETA PARA WREG
	SUBLW	.47		    ;O VALOR 47 EQUIVALE A 180 GRAUS
	BTFSS	STATUS,Z	    ;SE THETA > 180 GRUS, RETORNA AO MELHOR ÂNGULO
	GOTO	END_INT		    ;SE THETA =< 180, ENTÃO DESVIA PARA O FIM DA INTERRUPÇÃO 
	MOVFF	MELHOR_THETA,THETA  ;THETA RETORNA AO MELHOR ÂNGULO
	BSF	AJUSTE_THETA_FLAG   ;SINALIZA O FINAL DO AJUSTE DE THETA
	GOTO	END_INT
	
ANGULO_PHI
	INCF	PHI		    ;INCREMENTA O ÂNGULO PHI
	MOVF	PHI,0		    ;COPIA O VALOR DE PHI PARA WREG
	SUBLW	.47		    ;O VALOR 47 EQUIVALE A 180 GRAUS
	BTFSS	STATUS,Z	    ;SE PHI > 180 GRUS, RETORNE AO MELHOR ÂNGULO
	GOTO	END_INT		    ;SE PHI =< 180, ENTÃO DESVIA PARA O FIM DA INTERRUPÇÃO 
	MOVFF	MELHOR_PHI,PHI	    ;PHI RETORNA AO MELHOR ÂNGULO
	BSF	AJUSTE_PHI_FLAG	    ;SINALIZA O FINAL DO AJUSTE DE PHI
	GOTO	END_INT

TESTA_POSICIONAMENTO
	CLRF	WREG		    ;SE FOR O PHI IGUAL A ZERO
	SUBWF	MELHOR_PHI,0	    ;INICIA ANÁLISE DA ÁREA COMPLEMENTAR DE THETA	
    	BTFSS	STATUS,Z	    
	GOTO	MOTORES_POSICIONADOS;SE NÃO FOR ZERO, DESVIA PARA O FIM DA FASE DO POSICIONAMENTO
	MOVF	MELHOR_THETA,0	    ;COPIA VALOR DO MELHOR THETA PARA WREG
	SUBLW	.47		    ;SUBTRAI O VALOR DO MELHOR ÂNGULO DE 47, QUE EQUIVALE AO 180 GRAUS
	MOVWF	MELHOR_THETA	    ;SALVA O NOVO VALOR DE MELHOR_THETA
	BCF	ANGULO_ATIVO_FLAG   ;ALTERA O ANGULO ATIVO PARA THETA
	BCF	AJUSTE_PHI_FLAG	    ;REDEFINE O NÃO POSICIONAMENTO DE PHI
	GOTO	END_INT		    ;DESVIA PARA O FIM DA INTERRUPÇÃO
	
MOTORES_POSICIONADOS
	BSF	FIM_CICLO_FLAG	    ;SINALIZA O FINAL DO POSICIONAMENTO
	GOTO	END_INT
	
PHI_ZERO
	BTFSC	MODO_INICIALIZACAO  ;VERIFICA SE A INICIALIZACAO FOI FEITA
	GOTO	INICIA_CONVERSAO    ;SE SIM, INICIA CONVERSÃO
	DECFSZ	CONTADOR_AUX	    ;SE NÃO, INICIALIZA O ANGULO PHI
	GOTO	END_INT		    ;DECREMENTA O CONTADOR ATÉ ATINGIR ZERO
	MOVLW	.40		    
	MOVWF	CONTADOR_AUX	    ;REINICIALIZA O CONTADOR AUXILIAR
	BCF	ANGULO_ATIVO_FLAG   ;MUDA O ÂNGULO ATIVO PARA THETA
	BCF	AJUSTE_THETA_FLAG   ;SINALIZA O NÃO POSICIONAMENTO DE THETA
	BSF	MODO_INICIALIZACAO  ;SINALIZA O FIM DA INICIALIZACAO DOS ÂNGULOS
	GOTO	INICIA_CONVERSAO    ;DESVIA PARA O INICIO DA CONVERSÃO
	
THETA_ZERO
	DECFSZ	CONTADOR_AUX	    ;DECREMENTA O CONTADOR ATÉ ATINGIR ZERO
	GOTO	END_INT
	MOVLW	.40		    
	MOVWF	CONTADOR_AUX	    ;REINICIALIZA O CONTADOR AUXILIAR
	BSF	AJUSTE_THETA_FLAG   ;SINALIZA O POSICIONAMENTO INICIAL DE THETA
	GOTO	END_INT		    ;DESVIA PARA O FIM DA INTERRUPÇÃO
	
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;*       ROTINA DE SAÍDA DA INTERRUPÇÃO DE ALTA PRIORIDADE         *
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
; OS VALORES DE "W" E "STATUS" DEVEM SER RECUPERADOS ANTES DE 
; RETORNAR DA INTERRUPÇÃO

END_INT:
	BCF	INTCON,TMR0IF	    ;LIMPA A FLAG DO OVERFLOW DO TIMER0
	BSF	FIM_PERIODO_FLAG    ;SETA O SINALIZADOR DO FIM DO PERIODO DE 20 MILISEGUNDOS
	
	SWAPF	STATUS_TEMP,W
	MOVWF	STATUS		    ;MOVE STATUS_TEMP PARA STATUS
	SWAPF	W_TEMP,F
	SWAPF	W_TEMP,W	    ;MOVE W_TEMP PARA W
	RETFIE
    
	
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;*            INÍCIO DA INTERRUPÇÃO DE BAIXA PRIORIDADE            *
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
; ENDEREÇO DE DESVIO DAS INTERRUPÇÕES. A PRIMEIRA TAREFA É SALVAR OS
; VALORES DE "W" E "STATUS" PARA RECUPERAÇÃO FUTURA
	
LOW_INT:
	MOVWF	W_TEMP		;COPIA W PARA W_TEMP
	SWAPF	STATUS,W
	MOVWF	STATUS_TEMP	;COPIA STATUS PARA STATUS_TEMP

;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;*           ROTINA DE INTERRUPÇÃO DE BAIXA PRIORIDADE             *
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
; AQUI SERÃO ESCRITAS AS ROTINAS DE RECONHECIMENTO E TRATAMENTO DAS
; INTERRUPÇÕES
	
	NOP
	
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;*      ROTINA DE SAÍDA DA INTERRUPÇÃO DE BAIXA PRIORIDADE         *
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
; OS VALORES DE "W" E "STATUS" DEVEM SER RECUPERADOS ANTES DE 
; RETORNAR DA INTERRUPÇÃO
	
	SWAPF	STATUS_TEMP,W
	MOVWF	STATUS		;MOVE STATUS_TEMP PARA STATUS
	SWAPF	W_TEMP,F
	SWAPF	W_TEMP,W	;MOVE W_TEMP PARA W
	RETFIE
    
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;*	            	 ROTINAS E SUBROTINAS                      *
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
; CADA ROTINA OU SUBROTINA DEVE POSSUIR A DESCRIÇÃO DE FUNCIONAMENTO
; E UM NOME COERENTE ÀS SUAS FUNÇÕES.

DELAY_400U
	;CORPO DA ROTINA1
	MOVLW	.115		;VALOR INICIAL DO DELAY1
	MOVWF	DELAY1		;INICIALIZA A VARIÁVEL DELAY1
	MOVLW	.7		;VALOR INICIAL DO DELAY2
	MOVWF	DELAY2		;INICIALIZA A VARIÁVEL DELAY2
LOOP1
	DECFSZ	DELAY1		
	GOTO	LOOP1
	DECFSZ	DELAY2		
	GOTO	LOOP1		;DECREMENTA AS VARIÁVEIS ATÉ ZERO
	RETURN			;GERANDO UM DELAY DE 400 MICROSEGUNDOS
	
	
DELAY_AUXILIAR
	;CORPO DA ROTINA2
	CLRF	WREG		;LIMPA O REGISTRADOR WREG
	SUBWF	CONTADOR_DELAY,0;SE CONTADOR FOR ZERO, DESVIA PARA O RETORNO DA SUBROTINA
	BTFSC	STATUS,Z	;TESTA O BIT ZERO DO STATUS
	RETURN			;NÃO EXECUTA O DELAY, POIS O ÂNGULO É ZERO
DELAY_12U
	MOVLW	.42		;VALOR INICIAL DO DELAY2
	MOVWF	DELAY3		;INICIALIZA A VARIÁVEL DELAY3
LOOP2				    
	DECFSZ	DELAY3
	GOTO	LOOP2
	DECFSZ	CONTADOR_DELAY	;CADA CICLO EQUIVALE A 12 MICROSEGUNDOS
	GOTO	DELAY_12U	;REPETE O CICLO VÁRIAS VEZES DE ACORDO COM O ÂNGULO
	RETURN		
	
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;*                     INICIO DO PROGRAMA                          *
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
	
INICIO:
	MOVLW	B'00101111'	;TRISA DEFINE AS PORTAS RA<7:0> COMO ENTRADAS OU SAÍDAS
	MOVWF	TRISA		;1 - ENTRADA/ 0 - SAÍDA
	MOVLW	B'00000000'	;TRISB DEFINE AS PORTAS RB<7:0> COMO ENTRADAS OU SAÍDAS
	MOVWF	TRISB		;1 - ENTRADA/ 0 - SAÍDA
	MOVLW	B'10000001'	;CONFIGURAÇÃO DO TIMER0
	MOVWF	T0CON
	MOVLW	B'11100000'	;CONFIGURAÇÃO DA INTERRUPÇÃO PELO TIMER0
	MOVWF	INTCON
	MOVLW	B'00000100'	;A INTERRUPÇÃO DO TIMER0 É DEFINIDA COMO ALTA
	MOVWF	INTCON2
	MOVLW	B'00001010'	;CONFIGURA RA<3:0> E RA5 COMO CANAIS ANALÓGICOS
	MOVWF	ADCON1 
	MOVLW	B'00000111'	;MÓDULO COMPARADOR DESATIVADO
	MOVWF	CMCON 
	MOVLW	B'00000110'	;CONFIGURA O FOSC DO CONVERSOR A/D
	MOVWF	ADCON2
	MOVLW	B'00010001'	;HABILITA O CONVERSOR A/D E SELECIONA O CANAL AN4(RA5)
	MOVWF	ADCON0
	CLRF	PORTA		;LIMPA AS SAÍDAS RA<7:0>
	CLRF	LATA
	CLRF	PORTB		;LIMPA AS SAÍDAS RB<7:0>
	CLRF	LATB
	
; CONFIGURAÇÃO DO PROTOCOLO SPI
;	MOVLW	B'00000100'	;CONFIGURA O TIMER2 SEM PRE E POSTSCALER
;	MOVWF	T2CON
;	MOVLW	B'01111111'	;CONFIGURAÇÃO DO PERIODO DO TIMER2
;	MOVWF	PR2
;	MOVLW	B'00110011'	
;	MOVWF	SSPCON1		;CONFIGURAÇÃO DO SPI COM FONTE DE CLOCK TIMER2
;	MOVLW	B'10000000' 
;	MOVWF	SSPSTAT

;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;*                     INICIALIZAÇÃO DAS VARIÁVEIS                 *
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
			
	CLRF	THETA		    ;ÂNGULO INICIAL: 0 GRAUS
	CLRF	PHI		    ;ÂNGULO INICIAL: 0 GRAUS
	CLRF	MELHOR_THETA	    ;MELHOR THETA: 0 GRAUS
	CLRF	MELHOR_PHI	    ;MELHOR PHI: 0 GRAUS
	CLRF	V_MAX_THETA	    ;MAIOR TENSÃO EM THETA: 0V
	CLRF	V_MAX_PHI	    ;MAIOR TENSÃO EM PHI: 0V
	CLRF	AJUSTE_POSICAO	    ;MOTORES EM POSICIONAMENTO
	CLRF	FIM_PERIODO	    ;FIM_PERIODO = 0
	CLRF	ANGULO_ATIVO	    ;ANGULO_ATIVO = 0 (THETA)
	CLRF	CONTADOR_DELAY	    ;INICIALIZA COMO ZERO
	MOVLW	.0		    ;VALOR DE TENSÃO MÍNIMA
	MOVWF	VALOR_TENSAO_MINIMO ;DEVE SER APROXIMADAMENTE 200 MILIVOLTS
	MOVLW	.40		    ;AUXILIAR NA INICIALIZAÇÃO DO ÂNGULO ZERO
	MOVWF	CONTADOR_AUX	    ;MANTÉM O PULSO INICIAL POR 800 MILISEGUNDOS
	
	
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;*                     ROTINA PRINCIPAL                            *
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
MAIN
	;CORPO DA ROTINA PRINCIPAL
	BCF	FIM_PERIODO_FLAG	;LIMPA O SINALIZADOR DO TÉRMINO DO PERÍODO
	
	BTFSC	FIM_CICLO_FLAG		;TESTA SE O POSICIONAMENTO DOS MOTORES FOI REALIZADO
	GOTO	FIM_POSICIONAMENTO	;SE FIM_CICLO = 1, ENTÃO PERMANECE NAS MELHORES POSIÇÕES
	
	BTFSC	ANGULO_ATIVO_FLAG	;VERIFICA QUAL O ANGULO DEVE SER AJUSTADO	
	GOTO	ALTERA_PHI		;SE ANGULO_ATIVO = 1, AJUSTA O ÂNGULO PHI(MOTOR2)
	
	;***************     INICIO ALTERA THETA             ****************
	
	BSF	THETA_FLAG		;SE ANGULO_ATIVO = 0, AJUSTA O ÂNGULO THETA(MOTOR1)
	
	CALL	DELAY_400U		;PERMANECE POR 400 MICROSEGUNDOS
	MOVFF	THETA,CONTADOR_DELAY	;MAIS THETA*12 MICROSEGUNDOS EM NÍVEL ALTO
	CALL	DELAY_AUXILIAR		;CONTADOR É INICIALIZADO COM O VALOR DO ÂNGULO
	MOVFF	THETA,CONTADOR_DELAY	;MAIS THETA*12 MICROSEGUNDOS EM NÍVEL ALTO
	CALL	DELAY_AUXILIAR		;CONTADOR É INICIALIZADO COM O VALOR DO ÂNGULO
	MOVFF	THETA,CONTADOR_DELAY	;MAIS THETA*12 MICROSEGUNDOS EM NÍVEL ALTO
	CALL	DELAY_AUXILIAR		;CONTADOR É INICIALIZADO COM O VALOR DO ÂNGULO
	MOVFF	THETA,CONTADOR_DELAY	;MAIS THETA*12 MICROSEGUNDOS EM NÍVEL ALTO
	CALL	DELAY_AUXILIAR		;CONTADOR É INICIALIZADO COM O VALOR DO ÂNGULO
	
	BCF	THETA_FLAG		;ESPERA O PERÍODO DE 20 MILISEGUNDOS ACABAR
	GOTO	TERMINOU_PERIODO	;EM NÍVEL BAIXO
	
	;***************         FIM ALTERA THETA             ***************
	
	;***************     INICIO ALTERA PHI	             ****************
	
ALTERA_PHI
	BSF	PHI_FLAG		;SE ANGULO_ATIVO = 1, AJUSTA O ÂNGULO PHI(MOTOR2)
	
	CALL	DELAY_400U		;PERMANECE POR 400USEGUNDOS
	MOVFF	PHI,CONTADOR_DELAY	;MAIS PHI*12 MICROSEGUNDOS EM NÍVEL ALTO
	CALL	DELAY_AUXILIAR		;CONTADOR É INICIALIZADO COM O VALOR DO ÂNGULO
	MOVFF	PHI,CONTADOR_DELAY	;MAIS PHI*12 MICROSEGUNDOS EM NÍVEL ALTO
	CALL	DELAY_AUXILIAR		;CONTADOR É INICIALIZADO COM O VALOR DO ÂNGULO
	MOVFF	PHI,CONTADOR_DELAY	;MAIS PHI*12 MICROSEGUNDOS EM NÍVEL ALTO
	CALL	DELAY_AUXILIAR		;CONTADOR É INICIALIZADO COM O VALOR DO ÂNGULO
	MOVFF	PHI,CONTADOR_DELAY	;MAIS PHI*12 MICROSEGUNDOS EM NÍVEL ALTO
	CALL	DELAY_AUXILIAR		;CONTADOR É INICIALIZADO COM O VALOR DO ÂNGULO
	
	BCF	PHI_FLAG		;ESPERA O PERÍODO DE 20 MILISEGUNDOS ACABAR
	GOTO	TERMINOU_PERIODO	;EM NÍVEL BAIXO
	
	;***************        FIM ALTERA PHI               ****************
		
TERMINOU_PERIODO			;ESPERA O PERIODO ACABAR
	BTFSS	FIM_PERIODO_FLAG	;FIM_PERIODO = 0 - NÃO ACABOU / 1 - ACABOU
	GOTO	TERMINOU_PERIODO	;AGUARDA ATÉ O FIM DO PERÍODO DE 20 MILISEGUNDOS
	GOTO	MAIN			;SE ACABOU, RETORNA AO MAIN
	
FIM_POSICIONAMENTO
	GOTO	FIM_POSICIONAMENTO

;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;*                       FIM DO PROGRAMA                           *
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

	END
